import java.io.File;

import de.m_marvin.metabuild.core.tasks.BuildTask;
import de.m_marvin.metabuild.core.tasks.FileTask;
import de.m_marvin.metabuild.core.tasks.FileTask.Action;
import de.m_marvin.metabuild.cpp.tasks.CppLinkTask;
import de.m_marvin.metabuild.java.script.JavaBuildScript;
import de.m_marvin.metabuild.maven.Maven;

public class Buildfile extends JavaBuildScript {
	
	@Override
	public void init() {

		projectName = "jserialportaccess";
		
		super.init();
		
		withSourcesJar();
		
		importBuild("serialportaccess", new File("../SerialPortAccess"));
		
		var copyNatives = new FileTask("copyNatives", Action.COPY, new File("../SerialPortAccess/build/bin/jni"), new File("src/main/resources/natives"), true);
		copyNatives.group = "build";
		copyNatives.dependsOn("serialportaccess:buildJni");
		copyNatives.dependencyOf(jar);

		var cleanNatives = new FileTask("cleanNatives", Action.DELETE, new File("src/main/resources/natives"));
		cleanNatives.dependencyOf("clean");
		
		withTests("de.m_marvin.serialportaccess.Test");
		
	}
	
	@Override
	public void repositories() {
		
		dependencies.repository(Maven.mavenLocal());
		
	}
	
	@Override
	public void dependencies() {
		
		dependencies.implementation("de.m_marvin.serialportaccess:serialportaccess-winamd64::zip:1.0");
		
	}
	
	@Override
	public void manifest() {
		
		
		
	}
	
}