import java.io.File;

import de.m_marvin.metabuild.core.script.BuildScript;
import de.m_marvin.metabuild.core.tasks.BuildTask;

public class Buildfile extends BuildScript {
	
	void linkDependencies(String publishTask, String dependencyTask, String... targets) {
		for (String config : targets) {
			taskNamed(publishTask + config).dependencyOf(dependencyTask + config);
		}
	}
	
	@Override
	public void init() {
		
		importBuild("serialportaccess", new File("../SerialPortAccess"));
		importBuild("virtualserial", new File("../VirtualSerial"));
		importBuild("virtualserialsetup", new File("../VirtualSerialSetup"));
		importBuild("jserialportaccess", new File("../JSerialPortAccess"));
		importBuild("terminalserialaccess", new File("../TerminalSerialAccess"));
		importBuild("serialoverethernet", new File("../SerialOverEthernet"));
	
		var cleanAll = new BuildTask("cleanAll");
		cleanAll.dependsOn("serialportaccess:clean");
		cleanAll.dependsOn("virtualserial:clean");
		cleanAll.dependsOn("virtualserialsetup:clean");
		cleanAll.dependsOn("jserialportaccess:clean");
		cleanAll.dependsOn("terminalserialaccess:clean");
		cleanAll.dependsOn("serialoverethernet:clean");
		
		var buildAllLibs = new BuildTask("buildAllLibs");
		linkDependencies("serialportaccess:publishMavenLocal", "virtualserial:cppDependencies", "WinAMD64");
		taskNamed("serialportaccess:publishMavenLocal").dependencyOf("jserialportaccess:copyNatives");
		buildAllLibs.dependsOn("serialportaccess:publishMavenLocal");
		buildAllLibs.dependsOn("jserialportaccess:publishMavenLocal");
		buildAllLibs.dependsOn("virtualserial:publishMavenLocal");

		var buildAllApps = new BuildTask("buildAllApps");
		linkDependencies("serialportaccess:publishMavenLocal", "terminalserialaccess:cppDependencies", "WinAMD64", "LinAMD64", "LinARM64", "LinARM32");
		linkDependencies("serialportaccess:publishMavenLocal", "serialoverethernet:cppDependencies", "WinAMD64", "LinAMD64", "LinARM64", "LinARM32");
		linkDependencies("virtualserial:publishMavenLocal", "serialoverethernet:cppDependencies", "WinAMD64");
		buildAllApps.dependsOn("terminalserialaccess:build");
		buildAllApps.dependsOn("serialoverethernet:build");
		buildAllApps.dependsOn("virtualserialsetup:build");
		
		super.init();
		
	}
	
}